// Mocks generated by Mockito 5.4.2 from annotations
// in payment_reminder_app/test/domain/usecases/auth_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:payment_reminder_app/data/datasources/auth_datasource.dart'
    as _i2;
import 'package:payment_reminder_app/data/repositories/auth_repo_impl.dart'
    as _i4;
import 'package:payment_reminder_app/domain/entities/user_entitiy.dart' as _i6;
import 'package:payment_reminder_app/domain/failures/failures.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthDataSource_0 extends _i1.SmartFake
    implements _i2.AuthDataSource {
  _FakeAuthDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepoImpl extends _i1.Mock implements _i4.AuthRepoImpl {
  @override
  _i2.AuthDataSource get authDataSource => (super.noSuchMethod(
        Invocation.getter(#authDataSource),
        returnValue: _FakeAuthDataSource_0(
          this,
          Invocation.getter(#authDataSource),
        ),
        returnValueForMissingStub: _FakeAuthDataSource_0(
          this,
          Invocation.getter(#authDataSource),
        ),
      ) as _i2.AuthDataSource);
  @override
  _i5.Future<_i3.Either<_i6.UserEntity, _i7.Failure>> logInFromDataSource(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInFromDataSource,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.UserEntity, _i7.Failure>>.value(
            _FakeEither_1<_i6.UserEntity, _i7.Failure>(
          this,
          Invocation.method(
            #logInFromDataSource,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.UserEntity, _i7.Failure>>.value(
                _FakeEither_1<_i6.UserEntity, _i7.Failure>(
          this,
          Invocation.method(
            #logInFromDataSource,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.UserEntity, _i7.Failure>>);
  @override
  _i5.Future<_i3.Either<_i6.UserEntity, _i7.Failure>> signUpFromDataSource(
    String? username,
    String? email,
    String? contactNo,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpFromDataSource,
          [
            username,
            email,
            contactNo,
            password,
          ],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.UserEntity, _i7.Failure>>.value(
            _FakeEither_1<_i6.UserEntity, _i7.Failure>(
          this,
          Invocation.method(
            #signUpFromDataSource,
            [
              username,
              email,
              contactNo,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.UserEntity, _i7.Failure>>.value(
                _FakeEither_1<_i6.UserEntity, _i7.Failure>(
          this,
          Invocation.method(
            #signUpFromDataSource,
            [
              username,
              email,
              contactNo,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.UserEntity, _i7.Failure>>);
  @override
  _i5.Future<_i3.Either<bool, _i7.Failure>> logOutFromDataSource() =>
      (super.noSuchMethod(
        Invocation.method(
          #logOutFromDataSource,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<bool, _i7.Failure>>.value(
            _FakeEither_1<bool, _i7.Failure>(
          this,
          Invocation.method(
            #logOutFromDataSource,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<bool, _i7.Failure>>.value(
                _FakeEither_1<bool, _i7.Failure>(
          this,
          Invocation.method(
            #logOutFromDataSource,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<bool, _i7.Failure>>);
}
