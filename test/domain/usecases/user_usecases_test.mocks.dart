// Mocks generated by Mockito 5.4.2 from annotations
// in payment_reminder_app/test/domain/usecases/user_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:payment_reminder_app/data/datasources/user_datasource.dart'
    as _i2;
import 'package:payment_reminder_app/data/repositories/user_repo_impl.dart'
    as _i4;
import 'package:payment_reminder_app/domain/entities/user_entitiy.dart' as _i7;
import 'package:payment_reminder_app/domain/failures/failures.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserDataSource_0 extends _i1.SmartFake
    implements _i2.UserDataSource {
  _FakeUserDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepoImpl extends _i1.Mock implements _i4.UserRepoImpl {
  @override
  _i2.UserDataSource get userDataSource => (super.noSuchMethod(
        Invocation.getter(#userDataSource),
        returnValue: _FakeUserDataSource_0(
          this,
          Invocation.getter(#userDataSource),
        ),
        returnValueForMissingStub: _FakeUserDataSource_0(
          this,
          Invocation.getter(#userDataSource),
        ),
      ) as _i2.UserDataSource);
  @override
  _i5.Future<_i3.Either<void, _i6.Failure>> editPasswordFromDataSource(
    String? email,
    String? oldPassword,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editPasswordFromDataSource,
          [
            email,
            oldPassword,
            newPassword,
          ],
        ),
        returnValue: _i5.Future<_i3.Either<void, _i6.Failure>>.value(
            _FakeEither_1<void, _i6.Failure>(
          this,
          Invocation.method(
            #editPasswordFromDataSource,
            [
              email,
              oldPassword,
              newPassword,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<void, _i6.Failure>>.value(
                _FakeEither_1<void, _i6.Failure>(
          this,
          Invocation.method(
            #editPasswordFromDataSource,
            [
              email,
              oldPassword,
              newPassword,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<void, _i6.Failure>>);
  @override
  _i5.Future<_i3.Either<_i7.UserEntity, _i6.Failure>> editUserFromDataSource(
    String? id,
    String? username,
    String? email,
    String? contactNo,
    String? oldEmail,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editUserFromDataSource,
          [
            id,
            username,
            email,
            contactNo,
            oldEmail,
            password,
          ],
        ),
        returnValue: _i5.Future<_i3.Either<_i7.UserEntity, _i6.Failure>>.value(
            _FakeEither_1<_i7.UserEntity, _i6.Failure>(
          this,
          Invocation.method(
            #editUserFromDataSource,
            [
              id,
              username,
              email,
              contactNo,
              oldEmail,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i7.UserEntity, _i6.Failure>>.value(
                _FakeEither_1<_i7.UserEntity, _i6.Failure>(
          this,
          Invocation.method(
            #editUserFromDataSource,
            [
              id,
              username,
              email,
              contactNo,
              oldEmail,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i7.UserEntity, _i6.Failure>>);
  @override
  _i5.Future<_i3.Either<_i7.UserEntity, _i6.Failure>> getUserFromDataSource() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserFromDataSource,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i7.UserEntity, _i6.Failure>>.value(
            _FakeEither_1<_i7.UserEntity, _i6.Failure>(
          this,
          Invocation.method(
            #getUserFromDataSource,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i7.UserEntity, _i6.Failure>>.value(
                _FakeEither_1<_i7.UserEntity, _i6.Failure>(
          this,
          Invocation.method(
            #getUserFromDataSource,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i7.UserEntity, _i6.Failure>>);
}
