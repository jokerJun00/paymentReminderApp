// Mocks generated by Mockito 5.4.2 from annotations
// in payment_reminder_app/test/data/repositories/payment_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:payment_reminder_app/data/datasources/payment_datasource.dart'
    as _i5;
import 'package:payment_reminder_app/data/models/bank_model.dart' as _i9;
import 'package:payment_reminder_app/data/models/category_model.dart' as _i8;
import 'package:payment_reminder_app/data/models/paid_payment.dart' as _i10;
import 'package:payment_reminder_app/data/models/payment_model.dart' as _i7;
import 'package:payment_reminder_app/data/models/receiver_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseAuth_0 extends _i1.SmartFake implements _i2.FirebaseAuth {
  _FakeFirebaseAuth_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_1 extends _i1.SmartFake
    implements _i3.FirebaseFirestore {
  _FakeFirebaseFirestore_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReceiverModel_2 extends _i1.SmartFake implements _i4.ReceiverModel {
  _FakeReceiverModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PaymentDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentDataSourceImpl extends _i1.Mock
    implements _i5.PaymentDataSourceImpl {
  @override
  _i2.FirebaseAuth get firebaseAuth => (super.noSuchMethod(
        Invocation.getter(#firebaseAuth),
        returnValue: _FakeFirebaseAuth_0(
          this,
          Invocation.getter(#firebaseAuth),
        ),
        returnValueForMissingStub: _FakeFirebaseAuth_0(
          this,
          Invocation.getter(#firebaseAuth),
        ),
      ) as _i2.FirebaseAuth);
  @override
  _i3.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_1(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_1(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i3.FirebaseFirestore);
  @override
  _i6.Future<void> addPaymentFromDataSource(
    _i7.PaymentModel? newPayment,
    _i4.ReceiverModel? receiverInfo,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPaymentFromDataSource,
          [
            newPayment,
            receiverInfo,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> deletePaymentFromDataSource(_i7.PaymentModel? payment) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePaymentFromDataSource,
          [payment],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> editPaymentFromDataSource(
    _i7.PaymentModel? editedPaymentInfo,
    _i4.ReceiverModel? editedReceiverInfo,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editPaymentFromDataSource,
          [
            editedPaymentInfo,
            editedReceiverInfo,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<List<_i7.PaymentModel>> getAllPaymentsFromDataSource() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPaymentsFromDataSource,
          [],
        ),
        returnValue:
            _i6.Future<List<_i7.PaymentModel>>.value(<_i7.PaymentModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i7.PaymentModel>>.value(<_i7.PaymentModel>[]),
      ) as _i6.Future<List<_i7.PaymentModel>>);
  @override
  _i6.Future<List<_i8.CategoryModel>> getAllCategoriesFromDataSource() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllCategoriesFromDataSource,
          [],
        ),
        returnValue:
            _i6.Future<List<_i8.CategoryModel>>.value(<_i8.CategoryModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i8.CategoryModel>>.value(<_i8.CategoryModel>[]),
      ) as _i6.Future<List<_i8.CategoryModel>>);
  @override
  _i6.Future<void> addCategory(String? categoryName) => (super.noSuchMethod(
        Invocation.method(
          #addCategory,
          [categoryName],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<List<_i9.BankModel>> getBankList() => (super.noSuchMethod(
        Invocation.method(
          #getBankList,
          [],
        ),
        returnValue: _i6.Future<List<_i9.BankModel>>.value(<_i9.BankModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.BankModel>>.value(<_i9.BankModel>[]),
      ) as _i6.Future<List<_i9.BankModel>>);
  @override
  _i6.Future<List<_i8.CategoryModel>> getCategoryList() => (super.noSuchMethod(
        Invocation.method(
          #getCategoryList,
          [],
        ),
        returnValue:
            _i6.Future<List<_i8.CategoryModel>>.value(<_i8.CategoryModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i8.CategoryModel>>.value(<_i8.CategoryModel>[]),
      ) as _i6.Future<List<_i8.CategoryModel>>);
  @override
  _i6.Future<_i4.ReceiverModel> getReceiver(String? receiverId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReceiver,
          [receiverId],
        ),
        returnValue: _i6.Future<_i4.ReceiverModel>.value(_FakeReceiverModel_2(
          this,
          Invocation.method(
            #getReceiver,
            [receiverId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.ReceiverModel>.value(_FakeReceiverModel_2(
          this,
          Invocation.method(
            #getReceiver,
            [receiverId],
          ),
        )),
      ) as _i6.Future<_i4.ReceiverModel>);
  @override
  _i6.Future<List<_i7.PaymentModel>> getUpcomingPaymentsFromDataSource() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUpcomingPaymentsFromDataSource,
          [],
        ),
        returnValue:
            _i6.Future<List<_i7.PaymentModel>>.value(<_i7.PaymentModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i7.PaymentModel>>.value(<_i7.PaymentModel>[]),
      ) as _i6.Future<List<_i7.PaymentModel>>);
  @override
  void showAddNewPaymentNotification(_i7.PaymentModel? payment) =>
      super.noSuchMethod(
        Invocation.method(
          #showAddNewPaymentNotification,
          [payment],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setPaymentReminder(_i7.PaymentModel? payment) => super.noSuchMethod(
        Invocation.method(
          #setPaymentReminder,
          [payment],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<void> markPaymentAsPaidFromDataSource(_i7.PaymentModel? payment) =>
      (super.noSuchMethod(
        Invocation.method(
          #markPaymentAsPaidFromDataSource,
          [payment],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> payViaAppFromDataSource(_i7.PaymentModel? payment) =>
      (super.noSuchMethod(
        Invocation.method(
          #payViaAppFromDataSource,
          [payment],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<List<_i10.PaidPaymentModel>> getPaidPaymentListFromDataSource(
          DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaidPaymentListFromDataSource,
          [date],
        ),
        returnValue: _i6.Future<List<_i10.PaidPaymentModel>>.value(
            <_i10.PaidPaymentModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i10.PaidPaymentModel>>.value(
                <_i10.PaidPaymentModel>[]),
      ) as _i6.Future<List<_i10.PaidPaymentModel>>);
  @override
  _i6.Future<Map<int, double>> getMonthlyPaidAmountFromSource() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyPaidAmountFromSource,
          [],
        ),
        returnValue: _i6.Future<Map<int, double>>.value(<int, double>{}),
        returnValueForMissingStub:
            _i6.Future<Map<int, double>>.value(<int, double>{}),
      ) as _i6.Future<Map<int, double>>);
  @override
  _i6.Future<Map<String, double>>
      getMonthlySummaryGroupByCategoryFromDatasource(DateTime? date) =>
          (super.noSuchMethod(
            Invocation.method(
              #getMonthlySummaryGroupByCategoryFromDatasource,
              [date],
            ),
            returnValue:
                _i6.Future<Map<String, double>>.value(<String, double>{}),
            returnValueForMissingStub:
                _i6.Future<Map<String, double>>.value(<String, double>{}),
          ) as _i6.Future<Map<String, double>>);
  @override
  _i6.Future<Map<String, List<_i7.PaymentModel>>>
      getGroupedPaymentsFromDataSource() => (super.noSuchMethod(
            Invocation.method(
              #getGroupedPaymentsFromDataSource,
              [],
            ),
            returnValue: _i6.Future<Map<String, List<_i7.PaymentModel>>>.value(
                <String, List<_i7.PaymentModel>>{}),
            returnValueForMissingStub:
                _i6.Future<Map<String, List<_i7.PaymentModel>>>.value(
                    <String, List<_i7.PaymentModel>>{}),
          ) as _i6.Future<Map<String, List<_i7.PaymentModel>>>);
}
