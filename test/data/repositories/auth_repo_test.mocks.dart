// Mocks generated by Mockito 5.4.2 from annotations
// in payment_reminder_app/test/data/repositories/auth_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:payment_reminder_app/data/datasources/auth_datasource.dart'
    as _i5;
import 'package:payment_reminder_app/data/models/user_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseAuth_0 extends _i1.SmartFake implements _i2.FirebaseAuth {
  _FakeFirebaseAuth_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_1 extends _i1.SmartFake
    implements _i3.FirebaseFirestore {
  _FakeFirebaseFirestore_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_2 extends _i1.SmartFake implements _i4.UserModel {
  _FakeUserModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthDataSourceImpl extends _i1.Mock
    implements _i5.AuthDataSourceImpl {
  @override
  _i2.FirebaseAuth get firebaseAuth => (super.noSuchMethod(
        Invocation.getter(#firebaseAuth),
        returnValue: _FakeFirebaseAuth_0(
          this,
          Invocation.getter(#firebaseAuth),
        ),
        returnValueForMissingStub: _FakeFirebaseAuth_0(
          this,
          Invocation.getter(#firebaseAuth),
        ),
      ) as _i2.FirebaseAuth);
  @override
  _i3.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_1(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_1(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i3.FirebaseFirestore);
  @override
  _i6.Future<_i4.UserModel> logInFromDataSource(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInFromDataSource,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<_i4.UserModel>.value(_FakeUserModel_2(
          this,
          Invocation.method(
            #logInFromDataSource,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.UserModel>.value(_FakeUserModel_2(
          this,
          Invocation.method(
            #logInFromDataSource,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i4.UserModel>);
  @override
  _i6.Future<_i4.UserModel> signUpFromDataSource(
    String? username,
    String? email,
    String? contactNo,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpFromDataSource,
          [
            username,
            email,
            contactNo,
            password,
          ],
        ),
        returnValue: _i6.Future<_i4.UserModel>.value(_FakeUserModel_2(
          this,
          Invocation.method(
            #signUpFromDataSource,
            [
              username,
              email,
              contactNo,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.UserModel>.value(_FakeUserModel_2(
          this,
          Invocation.method(
            #signUpFromDataSource,
            [
              username,
              email,
              contactNo,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i4.UserModel>);
  @override
  _i6.Future<bool> logOutFromDataSource() => (super.noSuchMethod(
        Invocation.method(
          #logOutFromDataSource,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}
